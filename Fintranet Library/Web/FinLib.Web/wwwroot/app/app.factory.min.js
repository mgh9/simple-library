altairApp.factory("windowDimensions",["$window",function(){return{height:function(){return window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight},width:function(){return window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth}}}]).factory("utils",[function(){return{findByItemId:function(n,t){for(var i=0;i<n.length;i++)if(n[i].item_id==t)return n[i];return null},findById:function(n,t){for(var i=0;i<n.length;i++)if(n[i].id==t)return n[i];return null},serializeObject:function(n){var t={},i=n.serializeArray();return $.each(i,function(){t[this.name]!==undefined?(t[this.name].push||(t[this.name]=[t[this.name]]),t[this.name].push(this.value||"")):t[this.name]=this.value||""}),t},isHighDensity:function(){return window.matchMedia&&(window.matchMedia("only screen and (min-resolution: 124dpi), only screen and (min-resolution: 1.3dppx), only screen and (min-resolution: 48.8dpcm)").matches||window.matchMedia("only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (min-device-pixel-ratio: 1.3)").matches)||window.devicePixelRatio&&window.devicePixelRatio>1.3},isTouchDevice:function(){return!!("ontouchstart"in window)},lsTest:function(){var n="test";try{return localStorage.setItem(n,n),localStorage.removeItem(n),!0}catch(t){return!1}},card_show_hide:function(n,t,i,r){$(n).velocity({scale:0,opacity:.2},{duration:400,easing:[.4,0,.2,1],begin:function(){typeof t!="undefined"&&t(r)},complete:function(){typeof i!="undefined"&&i(r)}}).velocity("reverse")}}}]);angular.module("ConsoleLogger",[]).factory("PrintToConsole",["$rootScope",function(n){var t={active:!1};return t.toggle=function(){t.active=!t.active},t.active&&(n.$on("$stateChangeStart",function(){console.log("$stateChangeStart --- event, toState, toParams, fromState, fromParams");console.log(arguments)}),n.$on("$stateChangeError",function(){console.log("$stateChangeError --- event, toState, toParams, fromState, fromParams, error");console.log(arguments)}),n.$on("$stateChangeSuccess",function(){console.log("$stateChangeSuccess --- event, toState, toParams, fromState, fromParams");console.log(arguments)}),n.$on("$viewContentLoading",function(){console.log("$viewContentLoading --- event, viewConfig");console.log(arguments)}),n.$on("$viewContentLoaded",function(){console.log("$viewContentLoaded --- event");console.log(arguments)}),n.$on("$stateNotFound",function(){console.log("$stateNotFound --- event, unfoundState, fromState, fromParams");console.log(arguments)})),t}]);